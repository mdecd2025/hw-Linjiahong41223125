<<<<<<< HEAD
var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站: https://mdecd2025.github.io/hw-Linjiahong41223125/ \n 學員作業倉儲: https://github.com/mdecd2025/hw-Linjiahong41223125 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'course', 'text': '', 'tags': '', 'url': 'course.html'}, {'title': 'W1', 'text': '\n 這次主要的主要內容為修改python的版本 \n USB 隨身碟: \n 下載 \xa0 portable_wcm2025.7z \xa0 (330MB, 解開壓縮後 1.4GB) \n 備註:\xa0 請更新上列 portable_wcm2025.7z 中的 wscite 為 5.5.5 版 ( wscite_5.5.5.7z , 解開壓縮檔案後取代 5.5.4 版的 wscite 目錄) \n Webots_2025a.7z \xa0 (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z \xa0 (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n \n 依照影片跟新版本 \n \n \n 遇到的問題。其實照著應片內容修下載及修改啟動程式到沒甚麼問題，但有一點很靠，再命令提示字元內退出python環境要按^Z，在這裡就算我白癡好了，我以為要打shift+6和大寫Z，結果根本沒有退出python環境的情況下還不以為然地繼續打指令，結果當然什麼鬼都沒有一直鬼打牆，結果在詢問AI後才發現退出環境的^Z是按ctrl+Z，就因為這個鬼東西我消失了半個小時。 \n \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W4', 'text': '\xa0IPv6 位址設定，下載\xa0 cmsimde_w4.7z \xa0解壓縮後開啟並更換cmsimde 目錄。 \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W3', 'text': '\n 使用Brython找出組別成員 \n # 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容\n# 而所導入的 document 可以指向網頁中的特定 id 內容\nfrom browser import html, document\n# 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應\nurl = "https://mde.tw/list/2a.txt"\n# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列\ndata = open(url).readlines()\n# 進行資料查驗時, 印出 data 數列內容\n#print(data)\n# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始\nall_stud = data[1:]\n# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串\nprint("總共有 " + str(len(all_stud)) + "名學員")\n# \n# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應\nbrython_div1 = document["brython_div1"]\n# 利用 Brython 的 "<=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置\n# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference\nbrython_div1 <= "1. " + html.A("2a-ag6", href="https://mdecd2025.github.io/2a-ag6/")+ html.A("(repo)", href="https://github.com/mdecd2025/2a-ag6")\n# 利用 html.BR() 插入 break 標註\nbrython_div1 <= html.BR()\nbrython_div1 <= "2. " + html.A("41223110", href="https://mdecd2025.github.io/hw-41223110/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223110")\nbrython_div1 <= html.BR()\nbrython_div1 <= "3. " + html.A("41223125", href="https://mdecd2025.github.io/hw-Linjiahong41223125/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-Linjiahong41223125")\nbrython_div1 <= html.BR()\nbrython_div1 <= "4. " + html.A("41223129", href="https://mdecd2025.github.io/hw-hong41223129/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-hong41223129")\nbrython_div1 <= html.BR()\nbrython_div1 <= "5. " + html.A("41223132", href="https://mdecd2025.github.io/hw-CHN41223132/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-CHN41223132")\nbrython_div1 <= html.BR()\nbrython_div1 <= "6. " + html.A("41223133", href="https://mdecd2025.github.io/hw-41223133/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223133")\nbrython_div1 <= html.BR()\nbrython_div1 <= "7. " + html.A("41223147", href="https://mdecd2025.github.io/hw-41223147/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223147")\n \n 1.\xa0 2a-ag6 (repo) 2.\xa0 41223110 (repo) 3.\xa0 41223125 (repo) 4.\xa0 41223129 (repo) 5.\xa0 41223132 (repo) 6.\xa0 41223133 (repo) 7.\xa0 41223147 (repo) \n \n 使用Brython尋找2a未加入團隊之學生 \n 使用 X 的AI進行程式修改及優化 \n 影片看看就好，先前錄的問問題的影片損毀，所以放了一個回顧提問內容的影片 \n \n 修改後的程式 \n import urllib.request\n\n# 已分組學員帳號集合\nGROUPED_ACCOUNTS = {\n    \'41223154\', \'41271125\', \'41271158\', \'41271146\', \'41271131\', \'CYG41223103\', \'41223102\',\n    \'41023128\', \'41023137\', \'41223137\', \'41223157\', \'41223156\', \'otakuyoyo\', \'41223141\',\n    \'41223113\', \'kim41223114\', \'joeisme1208\', \'41223116\', \'41223144\', \'41223140\', \'41223143\',\n    \'41223138\', \'41223134\', \'41223136\', \'zhe41223118\', \'Spirit0224\', \'yuhao-08\', \'41223158\',\n    \'Ren911308\', \'41223150\', \'Manto8\', \'CYA41223106\', \'yan21ed\', \'Lin41223107\', \'41223133\',\n    \'hong41223129\', \'41223110\', \'41223147\', \'Linjiahong41223125\', \'CHN41223132\',\n    \'Yu-Fang-Hong\', \'41023111\', \'yckaooooo\', \'kolas911205\', \'41023105\', \'40932134\', \'41223104\',\n    \'yan41223101\', \'41223105\', \'41223153\', \'41223120\', \'41223152\', \'G8People\',\n    \'WSE41223112\', \'41223146\', \'41223119\'\n}\n\n# 從 URL 讀取學生資料\ndef fetch_student_data(url):\n    try:\n        response = urllib.request.urlopen(url)\n        data = response.read()\n        # 檢查資料類型，若為 bytes 則解碼\n        if isinstance(data, bytes):\n            data = data.decode(\'utf-8\')\n        return data.splitlines(), None\n    except Exception as e:\n        return None, f"無法讀取資料：{str(e)}"\n\n# 解析學生資料並找出未分組學員\ndef find_ungrouped_students(data_lines):\n    if not data_lines or len(data_lines) <= 1:\n        return [], "學員名單讀取失敗或無有效資料"\n    \n    all_students = data_lines[1:]  # 跳過標題行\n    total_count = len(all_students)\n    ungrouped = []\n\n    for line in all_students:\n        parts = line.split()  # 用空格分割學號和帳號\n        student_id = parts[0]  # 第一欄為學號\n        account = parts[1] if len(parts) > 1 else student_id  # 若無帳號，用學號代替\n        account = account.strip()\n\n        # 若帳號不在已分組集合中，記錄學號\n        if account not in GROUPED_ACCOUNTS:\n            ungrouped.append(student_id)\n\n    return ungrouped, f"總共有 {total_count} 名學員"\n\n# 主程式\nurl = "https://mde.tw/list/2a.txt"\ndata_lines, error = fetch_student_data(url)\n\n# 儲存輸出結果\noutput = []\nif data_lines is not None:\n    ungrouped, message = find_ungrouped_students(data_lines)\n    output.append(message)\n    output.append("未分組學員學號清單：")\n    for student_id in ungrouped:\n        output.append(student_id)\nelse:\n    output.append(error)\n\n# 在 CMSIMDE 中，print 會顯示在控制台，若需網頁顯示，需返回字串\nfor line in output:\n    print(line) \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W5', 'text': '\n \n \n Webots Tutorial 1 ~3 (HW3) \n https://cyberbotics.com/doc/guide/introduction-to-webots \n \n 請用繁體中文詳細說明下列資料: \xa0 https://cyberbotics.com/doc/guide/introduction-to-webots\xa0 \n 請整理 \xa0 https://cyberbotics.com/doc/guide/introduction-to-webots \xa0 中重要的英文單字與用法, 並且針對其中所使用的英文文法逐句說明. \n 請摘要出下列內容: (放入英文文章內容) \n 請列出上述文章中的重要的英文單字與解釋, 以及出現在文句中的用法: \n 請詳細說明如何採手動方式在 Webots 建立下列場景: \n 希望可以手把手一步步說明該如何利用圖形介面 menu 建立這個場景, 過程中有那些要點必須特別注意? \n \n \n 提6. \n Webots 中建立一個簡單場景：一個機器人在平面上移動並避開障礙物。以下是手把手說明如何透過圖形介面完成： \n 步驟 1：啟動 Webots \n \n \n 打開 Webots 應用程式。 \n \n \n 在啟動畫面選擇「New World」（新建世界）。 \n \n \n 步驟 2：設置基本場景 \n \n \n 加入地板 \n \n \n 在頂部選單點擊「Add」（添加）。 \n \n \n 選擇「Solid」（實體物件） > 「Box」（方塊）。 \n \n \n 在屬性面板中設置： \n \n \n 大小（Size）：10m x 10m x 0.1m（寬廣的平面）。 \n \n \n 名稱（Name）：Floor。 \n \n \n \n \n 注意：確保地板位於 Z=0，避免懸浮。 \n \n \n \n \n 加入機器人 \n \n \n 點擊「Add」 > 「Robot」（機器人）。 \n \n \n 在下拉選單中選擇「E-puck」（一個簡單的雙輪機器人）。 \n \n \n 調整位置（Translation）：例如 (0, 0, 0.05)，使其位於地板上。 \n \n \n 注意：檢查機器人是否與地板接觸，避免穿透或漂浮。 \n \n \n \n \n 加入障礙物 \n \n \n 點擊「Add」 > 「Solid」 > 「Box」。 \n \n \n 設置大小：1m x 1m x 0.5m。 \n \n \n 位置（Translation）：(2, 0, 0.25)。 \n \n \n 名稱：Obstacle。 \n \n \n \n \n 步驟 3：添加控制器 \n \n \n 點擊機器人節點（E-puck）。 \n \n \n 在屬性面板中找到「Controller」欄位。 \n \n \n 點擊下拉選單，選擇「 <extern> 」（外部控制器）。 \n \n \n 點擊「Wizard」（精靈），選擇「Create a new controller」。 \n \n \n 輸入名稱（如「avoid_obstacle」），選擇語言（如 Python）。 \n \n \n Webots 會生成一個簡單的控制器檔案。 \n \n \n 步驟 4：編輯控制器 \n \n \n 在控制器檔案中輸入簡單的避障邏輯（範例 Python 程式碼）： \n from controller import Robot\n\nrobot = Robot()\ntimestep = 64\nleft_motor = robot.getDevice("left wheel motor")\nright_motor = robot.getDevice("right wheel motor")\nleft_motor.setPosition(float(\'inf\'))\nright_motor.setPosition(float(\'inf\'))\ndistance_sensor = robot.getDevice("ds0")\ndistance_sensor.enable(timestep)\n\nwhile robot.step(timestep) != -1:\n    distance = distance_sensor.getValue()\n    if distance < 950:  # 檢測到障礙物\n        left_motor.setVelocity(-5)\n        right_motor.setVelocity(5)  # 轉向\n    else:\n        left_motor.setVelocity(5)\n        right_motor.setVelocity(5)  # 前進 \n \n \n \n 保存檔案。 \n \n \n 步驟 5：運行模擬 \n \n \n 點擊頂部選單的「Run」（運行按鈕）。 \n \n \n 觀察機器人是否能移動並避開障礙物。 \n \n \n 若有問題，檢查： \n \n \n 機器人與地板的接觸是否正常。 \n \n \n 感測器是否啟用。 \n \n \n 控制器是否正確綁定。 \n \n \n \n \n 注意事項 \n \n \n 坐標系統 ：Webots 使用 X（左右）、Y（前後）、Z（上下）的坐標系，確保物件位置合理。 \n \n \n 物理屬性 ：檢查物件的質量與摩擦係數，避免異常滑動。 \n \n \n 控制器同步 ：確保控制器與機器人節點正確關聯。 \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W5.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號 \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n 各週網頁內容: \n 期中心得: \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};
=======
var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站: https://mdecd2025.github.io/hw-Linjiahong41223125/ \n 學員作業倉儲: https://github.com/mdecd2025/hw-Linjiahong41223125 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'course', 'text': '', 'tags': '', 'url': 'course.html'}, {'title': 'W1', 'text': '\n 這次主要的主要內容為修改python的版本 \n USB 隨身碟: \n 下載 \xa0 portable_wcm2025.7z \xa0 (330MB, 解開壓縮後 1.4GB) \n 備註:\xa0 請更新上列 portable_wcm2025.7z 中的 wscite 為 5.5.5 版 ( wscite_5.5.5.7z , 解開壓縮檔案後取代 5.5.4 版的 wscite 目錄) \n Webots_2025a.7z \xa0 (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z \xa0 (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n \n 依照影片跟新版本 \n \n \n 遇到的問題。其實照著應片內容修下載及修改啟動程式到沒甚麼問題，但有一點很靠，再命令提示字元內退出python環境要按^Z，在這裡就算我白癡好了，我以為要打shift+6和大寫Z，結果根本沒有退出python環境的情況下還不以為然地繼續打指令，結果當然什麼鬼都沒有一直鬼打牆，結果在詢問AI後才發現退出環境的^Z是按ctrl+Z，就因為這個鬼東西我消失了半個小時。 \n \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W3', 'text': '\n 使用Brython找出組別成員 \n # 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容\n# 而所導入的 document 可以指向網頁中的特定 id 內容\nfrom browser import html, document\n# 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應\nurl = "https://mde.tw/list/2a.txt"\n# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列\ndata = open(url).readlines()\n# 進行資料查驗時, 印出 data 數列內容\n#print(data)\n# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始\nall_stud = data[1:]\n# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串\nprint("總共有 " + str(len(all_stud)) + "名學員")\n# \n# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應\nbrython_div1 = document["brython_div1"]\n# 利用 Brython 的 "<=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置\n# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference\nbrython_div1 <= "1. " + html.A("2a-ag6", href="https://mdecd2025.github.io/2a-ag6/")+ html.A("(repo)", href="https://github.com/mdecd2025/2a-ag6")\n# 利用 html.BR() 插入 break 標註\nbrython_div1 <= html.BR()\nbrython_div1 <= "2. " + html.A("41223110", href="https://mdecd2025.github.io/hw-41223110/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223110")\nbrython_div1 <= html.BR()\nbrython_div1 <= "3. " + html.A("41223125", href="https://mdecd2025.github.io/hw-Linjiahong41223125/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-Linjiahong41223125")\nbrython_div1 <= html.BR()\nbrython_div1 <= "4. " + html.A("41223129", href="https://mdecd2025.github.io/hw-hong41223129/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-hong41223129")\nbrython_div1 <= html.BR()\nbrython_div1 <= "5. " + html.A("41223132", href="https://mdecd2025.github.io/hw-CHN41223132/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-CHN41223132")\nbrython_div1 <= html.BR()\nbrython_div1 <= "6. " + html.A("41223133", href="https://mdecd2025.github.io/hw-41223133/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223133")\nbrython_div1 <= html.BR()\nbrython_div1 <= "7. " + html.A("41223147", href="https://mdecd2025.github.io/hw-41223147/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223147")\n \n 1.\xa0 2a-ag6 (repo) 2.\xa0 41223110 (repo) 3.\xa0 41223125 (repo) 4.\xa0 41223129 (repo) 5.\xa0 41223132 (repo) 6.\xa0 41223133 (repo) 7.\xa0 41223147 (repo) \n \n 使用Brython尋找2a未加入團隊之學生 \n 使用 X 的AI進行程式修改及優化 \n 影片看看就好，先前錄的問問題的影片損毀，所以放了一個回顧提問內容的影片 \n \n 修改後的程式 \n import urllib.request\n\n# 已分組學員帳號集合\nGROUPED_ACCOUNTS = {\n    \'41223154\', \'41271125\', \'41271158\', \'41271146\', \'41271131\', \'CYG41223103\', \'41223102\',\n    \'41023128\', \'41023137\', \'41223137\', \'41223157\', \'41223156\', \'otakuyoyo\', \'41223141\',\n    \'41223113\', \'kim41223114\', \'joeisme1208\', \'41223116\', \'41223144\', \'41223140\', \'41223143\',\n    \'41223138\', \'41223134\', \'41223136\', \'zhe41223118\', \'Spirit0224\', \'yuhao-08\', \'41223158\',\n    \'Ren911308\', \'41223150\', \'Manto8\', \'CYA41223106\', \'yan21ed\', \'Lin41223107\', \'41223133\',\n    \'hong41223129\', \'41223110\', \'41223147\', \'Linjiahong41223125\', \'CHN41223132\',\n    \'Yu-Fang-Hong\', \'41023111\', \'yckaooooo\', \'kolas911205\', \'41023105\', \'40932134\', \'41223104\',\n    \'yan41223101\', \'41223105\', \'41223153\', \'41223120\', \'41223152\', \'G8People\',\n    \'WSE41223112\', \'41223146\', \'41223119\'\n}\n\n# 從 URL 讀取學生資料\ndef fetch_student_data(url):\n    try:\n        response = urllib.request.urlopen(url)\n        data = response.read()\n        # 檢查資料類型，若為 bytes 則解碼\n        if isinstance(data, bytes):\n            data = data.decode(\'utf-8\')\n        return data.splitlines(), None\n    except Exception as e:\n        return None, f"無法讀取資料：{str(e)}"\n\n# 解析學生資料並找出未分組學員\ndef find_ungrouped_students(data_lines):\n    if not data_lines or len(data_lines) <= 1:\n        return [], "學員名單讀取失敗或無有效資料"\n    \n    all_students = data_lines[1:]  # 跳過標題行\n    total_count = len(all_students)\n    ungrouped = []\n\n    for line in all_students:\n        parts = line.split()  # 用空格分割學號和帳號\n        student_id = parts[0]  # 第一欄為學號\n        account = parts[1] if len(parts) > 1 else student_id  # 若無帳號，用學號代替\n        account = account.strip()\n\n        # 若帳號不在已分組集合中，記錄學號\n        if account not in GROUPED_ACCOUNTS:\n            ungrouped.append(student_id)\n\n    return ungrouped, f"總共有 {total_count} 名學員"\n\n# 主程式\nurl = "https://mde.tw/list/2a.txt"\ndata_lines, error = fetch_student_data(url)\n\n# 儲存輸出結果\noutput = []\nif data_lines is not None:\n    ungrouped, message = find_ungrouped_students(data_lines)\n    output.append(message)\n    output.append("未分組學員學號清單：")\n    for student_id in ungrouped:\n        output.append(student_id)\nelse:\n    output.append(error)\n\n# 在 CMSIMDE 中，print 會顯示在控制台，若需網頁顯示，需返回字串\nfor line in output:\n    print(line) \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W5', 'text': '\n \n 一、繁體中文詳細說明 \n https://cyberbotics.com/doc/guide/introduction-to-webots  是 Webots 使用者指南的一部分，主要介紹 Webots 這款機器人模擬軟體的基本概念與功能。Webots 是一款由 Cyberbotics 公司開發的開源軟體，用於模擬機器人的設計、編程與測試。它提供了一個圖形化的開發環境，讓使用者可以創建虛擬場景、加入機器人模型，並模擬其行為。該頁面通常會介紹 Webots 的核心功能，例如如何開始使用、介面概覽以及基本操作。 \n 以下是對該頁面內容的繁體中文概述（假設內容為標準的「Introduction to Webots」）： \n \n \n 什麼是 Webots？  Webots 是一款專業的機器人模擬工具，適用於教育、研究和工業用途。它支援多種程式語言（如 C、C++、Python），並提供豐富的機器人模型與感測器庫。 \n \n \n 為什麼使用 Webots？  使用者可以透過 Webots 在虛擬環境中測試機器人設計，無需實體硬體即可驗證控制演算法。這降低了開發成本並提高了效率。 \n \n \n 如何開始？  使用者需要下載並安裝 Webots，然後透過圖形介面創建一個「世界」（world），在其中加入機器人與環境物件，並編寫控制程式來模擬行為。 \n \n \n 基本功能 \n \n \n 支援 3D 圖形渲染。 \n \n \n 提供物理引擎模擬真實世界的物理行為（如重力、摩擦）。 \n \n \n 可匯入外部模型或自行設計。 \n \n \n \n \n \n 二、重要英文單字與用法整理 \n 以下是假設從該頁面提取的重要單字及其解釋，並結合可能的用法： \n \n \n Simulation（模擬） \n \n \n 定義：模擬現實世界中的行為或系統。 \n \n \n 用法：This software provides a realistic simulation of robot movements. （這個軟體提供了機器人動作的真實模擬。） \n \n \n \n \n Environment（環境） \n \n \n 定義：機器人運行的虛擬或物理空間。 \n \n \n 用法：You can customize the environment by adding obstacles. （你可以透過加入障礙物來定制環境。） \n \n \n \n \n Robot（機器人） \n \n \n 定義：可程式化的自動化設備。 \n \n \n 用法：The robot can be programmed to avoid collisions. （機器人可以被編程以避免碰撞。） \n \n \n \n \n Interface（介面） \n \n \n 定義：使用者與軟體互動的圖形或命令平台。 \n \n \n 用法：The graphical interface makes it easy to design worlds. （圖形介面讓設計世界變得簡單。） \n \n \n \n \n Controller（控制器） \n \n \n 定義：控制機器人行為的程式碼。 \n \n \n 用法：A controller is needed to define the robot’s actions. （需要一個控制器來定義機器人的動作。） \n \n \n \n \n \n 三、英文文法逐句分析 \n \n \n 假設的英文內容（基於典型介紹）： \n \n Webots is a free and open-source robot simulation software developed by Cyberbotics. It enables users to create 3D virtual worlds where robots can be designed, programmed, and tested. With a powerful physics engine and support for multiple programming languages, Webots is ideal for education, research, and prototyping. \n \n 繁體中文摘要：  Webots 是一款由 Cyberbotics 開發的免費開源機器人模擬軟體。它讓使用者能創建 3D 虛擬世界，並在其中設計、編程與測試機器人。憑藉強大的物理引擎與多語言支援，Webots 非常適合教育、研究與原型開發。 \n \n \n \n \n \n 四、手動建立場景的詳細步驟 \n 假設您希望在 Webots 中建立一個簡單場景：一個機器人在平面上移動並避開障礙物。以下是手把手說明如何透過圖形介面完成： \n 步驟 1：啟動 Webots \n \n \n 打開 Webots 應用程式。 \n \n \n 在啟動畫面選擇「New World」（新建世界）。 \n \n \n 步驟 2：設置基本場景 \n \n \n 加入地板 \n \n \n 在頂部選單點擊「Add」（添加）。 \n \n \n 選擇「Solid」（實體物件） > 「Box」（方塊）。 \n \n \n 在屬性面板中設置： \n \n \n 大小（Size）：10m x 10m x 0.1m（寬廣的平面）。 \n \n \n 名稱（Name）：Floor。 \n \n \n \n \n 注意：確保地板位於 Z=0，避免懸浮。 \n \n \n \n \n 加入機器人 \n \n \n 點擊「Add」 > 「Robot」（機器人）。 \n \n \n 在下拉選單中選擇「E-puck」（一個簡單的雙輪機器人）。 \n \n \n 調整位置（Translation）：例如 (0, 0, 0.05)，使其位於地板上。 \n \n \n 注意：檢查機器人是否與地板接觸，避免穿透或漂浮。 \n \n \n \n \n 加入障礙物 \n \n \n 點擊「Add」 > 「Solid」 > 「Box」。 \n \n \n 設置大小：1m x 1m x 0.5m。 \n \n \n 位置（Translation）：(2, 0, 0.25)。 \n \n \n 名稱：Obstacle。 \n \n \n \n \n 步驟 3：添加控制器 \n \n \n 點擊機器人節點（E-puck）。 \n \n \n 在屬性面板中找到「Controller」欄位。 \n \n \n 點擊下拉選單，選擇「 <extern> 」（外部控制器）。 \n \n \n 點擊「Wizard」（精靈），選擇「Create a new controller」。 \n \n \n 輸入名稱（如「avoid_obstacle」），選擇語言（如 Python）。 \n \n \n Webots 會生成一個簡單的控制器檔案。 \n \n \n 步驟 4：編輯控制器 \n \n \n 在控制器檔案中輸入簡單的避障邏輯（範例 Python 程式碼）： \n from controller import Robot\n\nrobot = Robot()\ntimestep = 64\nleft_motor = robot.getDevice("left wheel motor")\nright_motor = robot.getDevice("right wheel motor")\nleft_motor.setPosition(float(\'inf\'))\nright_motor.setPosition(float(\'inf\'))\ndistance_sensor = robot.getDevice("ds0")\ndistance_sensor.enable(timestep)\n\nwhile robot.step(timestep) != -1:\n    distance = distance_sensor.getValue()\n    if distance < 950:  # 檢測到障礙物\n        left_motor.setVelocity(-5)\n        right_motor.setVelocity(5)  # 轉向\n    else:\n        left_motor.setVelocity(5)\n        right_motor.setVelocity(5)  # 前進 \n \n \n \n 保存檔案。 \n \n \n 步驟 5：運行模擬 \n \n \n 點擊頂部選單的「Run」（運行按鈕）。 \n \n \n 觀察機器人是否能移動並避開障礙物。 \n \n \n 若有問題，檢查： \n \n \n 機器人與地板的接觸是否正常。 \n \n \n 感測器是否啟用。 \n \n \n 控制器是否正確綁定。 \n \n \n \n \n 注意事項 \n \n \n 坐標系統 ：Webots 使用 X（左右）、Y（前後）、Z（上下）的坐標系，確保物件位置合理。 \n \n \n 物理屬性 ：檢查物件的質量與摩擦係數，避免異常滑動。 \n \n \n 控制器同步 ：確保控制器與機器人節點正確關聯。 \n \n \n \n \n \n \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W6', 'text': '', 'tags': '', 'url': 'W6.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號 \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n 各週網頁內容: \n 期中心得: \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};
>>>>>>> 2070db626207384e0256dfdcafbb39365c44af18
